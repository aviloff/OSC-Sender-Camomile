#N canvas 482 110 975 898 10;
#X obj 802 -18 param.change;
#X obj 39 60 hsl 180 15 0 10 0 0 \$0-sld-1-s \$0-sld-1-r empty -2 -8
0 10 -92394 -1 -1 0 1;
#X obj 230 60 nbx 5 15 -1e+37 1e+37 0 0 \$0-nbx-1-s \$0-nbx-1-r empty
0 -8 0 10 -92394 -1 -1 0 256;
#X msg 786 574 set \$1;
#X obj 802 10 param.get.multi;
#X obj 802 39 route 1 2 3 4 5 6 7 8 9 10, f 235;
#X obj 802 156 s osCC;
#X obj 942 158 s osCC;
#X obj 1083 85 s osCC;
#X obj 1224 87 s osCC;
#X obj 1364 85 s osCC;
#X obj 1505 88 s osCC;
#X obj 1646 88 s osCC;
#X obj 1786 91 s osCC;
#X obj 1927 95 s osCC;
#X obj 2068 96 s osCC;
#X msg 812 64 set \$1;
#X obj 739 276 netsend -u -b;
#X obj 739 207 loadbang;
#X obj 747 254 r osCC;
#X obj 802 137 oscformat -f f param1;
#X obj 942 137 oscformat -f f param2;
#X obj 1083 65 oscformat -f f param3;
#X obj 1224 65 oscformat -f f param4;
#X text 296 60 param1;
#X obj 2068 73 oscformat -f f param10;
#X obj 806 207 r gui-bang;
#X obj 340 6 bng 15 250 50 0 gui-bang empty empty 17 7 0 10 -262144
-1 -1;
#X obj 1927 72 oscformat -f f param9;
#X obj 1786 70 oscformat -f f param8;
#X obj 1646 67 oscformat -f f param7;
#X obj 1505 66 oscformat -f f param6;
#X obj 1364 65 oscformat -f f param5;
#X obj 786 553 r \$0-sld-1-s;
#X obj 786 530 param.set 1 \$0-sld-1-s;
#X obj 786 639 s \$0-sld-1-r;
#X obj 786 618 r \$0-nbx-1-s;
#X obj 786 595 s \$0-nbx-1-r;
#X obj 39 82 hsl 180 15 0 10 0 0 \$0-sld-2-s \$0-sld-2-r empty -2 -8
0 10 -92394 -1 -1 0 1;
#X obj 230 82 nbx 5 15 -1e+37 1e+37 0 0 \$0-nbx-2-s \$0-nbx-2-r empty
0 -8 0 10 -92394 -1 -1 0 256;
#X text 296 82 param2;
#X obj 822 85 s \$0-nbx-1-r;
#X obj 812 106 s \$0-sld-1-r;
#X msg 955 64 set \$1;
#X obj 965 85 s \$0-nbx-2-r;
#X obj 955 106 s \$0-sld-2-r;
#X msg 947 576 set \$1;
#X text 246 5 restart netsend;
#X obj 947 531 param.set 2 \$0-sld-2-s;
#X obj 947 555 r \$0-sld-2-s;
#X obj 947 597 s \$0-nbx-2-r;
#X obj 947 620 r \$0-nbx-2-s;
#X obj 947 641 s \$0-sld-2-r;
#X text 446 554 would be great if these send/receives could be handled
dynamically;
#X text 432 60 Only this trick with [set \$1] allows to record/playback
automation data predictably. Why I didn't figure out yet. Otherwise
it would be better to implement this sending dynamically in the param.get.multi
abstraction or if needed copy it to the main canvas;
#X msg 739 229 connect localhost 12001;
#X obj 749 503 route param1 param2, f 49;
#X text -388 59 another issue is that the sliders do not switch to
fine control mode when SHIFT is pressed (like they do in PD);
#X obj 749 483 network;
#X connect 3 0 37 0;
#X connect 4 0 5 0;
#X connect 5 0 16 0;
#X connect 5 0 20 0;
#X connect 5 1 21 0;
#X connect 5 1 43 0;
#X connect 5 2 22 0;
#X connect 5 3 23 0;
#X connect 5 4 32 0;
#X connect 5 5 31 0;
#X connect 5 6 30 0;
#X connect 5 7 29 0;
#X connect 5 8 28 0;
#X connect 5 9 25 0;
#X connect 16 0 42 0;
#X connect 16 0 41 0;
#X connect 18 0 55 0;
#X connect 19 0 17 0;
#X connect 20 0 6 0;
#X connect 21 0 7 0;
#X connect 22 0 8 0;
#X connect 23 0 9 0;
#X connect 25 0 15 0;
#X connect 26 0 55 0;
#X connect 28 0 14 0;
#X connect 29 0 13 0;
#X connect 30 0 12 0;
#X connect 31 0 11 0;
#X connect 32 0 10 0;
#X connect 33 0 3 0;
#X connect 36 0 35 0;
#X connect 43 0 44 0;
#X connect 43 0 45 0;
#X connect 46 0 50 0;
#X connect 49 0 46 0;
#X connect 51 0 52 0;
#X connect 55 0 17 0;
#X connect 56 0 34 0;
#X connect 56 1 48 0;
#X connect 58 0 56 0;
#X coords 0 -1 1 1 360 160 1 2 2;
