#N canvas 484 110 1566 898 10;
#X obj 39 60 hsl 180 15 0 10 0 0 \$0-sld-1-s \$0-sld-1-r empty -2 -8
0 10 -92394 -1 -1 0 1;
#X obj 230 60 nbx 5 15 -1e+37 1e+37 0 0 \$0-nbx-1-s \$0-nbx-1-r c0x20>sdcd
0 -8 0 10 -92394 -1 -1 0 256;
#X msg 830 373 set \$1;
#X obj 803 151 s osCC;
#X obj 943 153 s osCC;
#X obj 803 131 oscformat -f f param1;
#X obj 943 132 oscformat -f f param2;
#X text 296 60 param1;
#X obj 340 6 bng 15 250 50 0 gui-bang empty empty 17 7 0 10 -262144
-1 -1;
#X obj 830 352 r \$0-sld-1-s;
#X obj 830 329 param.set 1 \$0-sld-1-s;
#X obj 830 438 s \$0-sld-1-r;
#X obj 830 417 r \$0-nbx-1-s;
#X obj 830 394 s \$0-nbx-1-r;
#X obj 39 82 hsl 180 15 0 10 0 0 \$0-sld-2-s \$0-sld-2-r empty -2 -8
0 10 -92394 -1 -1 0 1;
#X obj 230 82 nbx 5 15 -1e+37 1e+37 0 0 \$0-nbx-2-s \$0-nbx-2-r empty
0 -8 0 10 -92394 -1 -1 0 256;
#X text 296 82 param2;
#X msg 961 92 set \$1;
#X obj 961 112 s \$0-sld-2-r;
#X msg 991 375 set \$1;
#X text 246 5 restart netsend;
#X obj 991 330 param.set 2 \$0-sld-2-s;
#X obj 991 354 r \$0-sld-2-s;
#X obj 991 396 s \$0-nbx-2-r;
#X obj 991 419 r \$0-nbx-2-s;
#X obj 991 440 s \$0-sld-2-r;
#X text 490 353 would be great if these send/receives could be handled
dynamically;
#X obj 793 302 route param1 param2, f 49;
#X text -348 60 another issue is that the sliders do not switch to
fine control mode when SHIFT is pressed (like they do in PD);
#X obj 793 280 network;
#X text 431 60 Only this trick with [set \$1( allows to record/playback
automation data predictably. Why I didn't figure out yet. Otherwise
it would be better to implement this sending dynamically in the param.get.multi
abstraction or if needed copy objects from there to the main canvas
;
#X text 591 252 networking and parameter change abstraction;
#X obj 802 11 receive param;
#X obj 802 66 change -1e+16;
#X obj 942 70 change -1e+16;
#X msg 820 90 set \$1;
#X obj 820 110 s \$0-sld-1-r;
#X obj 802 39 route 1 2, f 48;
#X connect 2 0 13 0;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 9 0 2 0;
#X connect 12 0 11 0;
#X connect 17 0 18 0;
#X connect 19 0 23 0;
#X connect 22 0 19 0;
#X connect 24 0 25 0;
#X connect 27 0 10 0;
#X connect 27 1 21 0;
#X connect 29 0 27 0;
#X connect 32 0 37 0;
#X connect 33 0 5 0;
#X connect 33 0 35 0;
#X connect 34 0 6 0;
#X connect 34 0 17 0;
#X connect 35 0 36 0;
#X connect 37 0 33 0;
#X connect 37 1 34 0;
#X coords 0 -1 1 1 360 160 1 2 2;
